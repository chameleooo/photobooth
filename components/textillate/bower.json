{
  "name": "textillate",
  "version": "0.4.0",
  "homepage": "https://github.com/jschr/textillate",
  "authors": [
    "Jordan Schroter <jordan.schroter@gmail.com>"
  ],
  "description": "A simple plugin for CSS3 text animations",
  "main": "jquery.textillate.js",
  "keywords": [
    "textillate",
    "css3",
    "animation",
    "text",
    "lettering"
  ],
  "license": "MIT",
  "ignore": [
    "**/.*",
    "node_modules",
    "bower_components",
    "test",
    "tests"
  ],
  "dependencies": {
    "jquery": ">= 1.6.2",
    "letteringjs": ">= 0.6.1",
    "animate.css": ">= 3.0.0"
  },
  "gitHead": "402fe52d330ddbc84b9c0b973a0ae8fdaee664b5",
  "readme": "#Textillate.js v0.4.0\n\nSee a live demo [here](http://jschr.github.com/textillate/).\n\nTextillate.js combines some awesome libraries to provide an easy-to-use plugin for applying CSS3 animations to any text.\n\n##Usage\n\nLet's start with the basic markup:\n\n```html\n<h1 class=\"tlt\">My Title</h1>\n```\n\nAnd your JavaScript should look like this:\n\n```js\n$(function () {\n\t$('.tlt').textillate();\n})\n```\n\nThis will animate using the default options. To change the defaults, you can either use the html data api:\n\n```html\n<h1 class=\"tlt\" data-in-effect=\"rollIn\">Title</h1>\n```\n\nor pass in options on initialization (see full list of options below):\n\n```js\n$('.tlt').textillate({ in: { effect: 'rollIn' } });\n```\n\nYou can also tell textillate.js to animate a list with the following markup:\n\n```html\n<h1 class=\"tlt\">\n\t<ul class=\"texts\">\n\t\t<li data-out-effect=\"fadeOut\" data-out-shuffle=\"true\">Some Title</li>\t\n\t\t<li data-in-effect=\"fadeIn\">Another Title</li>\n\t</ul>\n</h1>\n```\n\n```js\n$('.tlt').textillate();\n```\n\nNotice that you can control the animation parameters on each text (`<li>`) using the data api.\n\n##Dependencies\nTo start using textillate.js, you will need the following:\n\n* [jQuery](http://jquery.com/download/)\n* [lettering.js](https://github.com/davatron5000/Lettering.js)\n* [animate.css](https://github.com/daneden/animate.css)\n\n\n##Options\n\n```js\n$('.tlt').textillate({\n  // the default selector to use when detecting multiple texts to animate\n  selector: '.texts',\n  \n  // enable looping\n  loop: false,\n  \n  // sets the minimum display time for each text before it is replaced\n  minDisplayTime: 2000,\n  \n  // sets the initial delay before starting the animation\n  // (note that depending on the in effect you may need to manually apply \n  // visibility: hidden to the element before running this plugin)\n  initialDelay: 0,\n    \n  // set whether or not to automatically start animating\n  autoStart: true,\n  \n  // custom set of 'in' effects. This effects whether or not the \n  // character is shown/hidden before or after an animation  \n  inEffects: [],\n  \n  // custom set of 'out' effects\n  outEffects: [ 'hinge' ],\n  \n  // in animation settings\n  in: {\n  \t// set the effect name\n    effect: 'fadeInLeftBig',\n    \n    // set the delay factor applied to each consecutive character\n    delayScale: 1.5,\n    \n    // set the delay between each character\n    delay: 50,\n    \n    // set to true to animate all the characters at the same time\n    sync: false,\n    \n    // randomize the character sequence \n    // (note that shuffle doesn't make sense with sync = true)\n    shuffle: false,\n\n    // reverse the character sequence \n    // (note that reverse doesn't make sense with sync = true)\n    reverse: false,\n\n    // callback that executes once the animation has finished\n    callback: function () {}\n  },\n  \n  // out animation settings.\n  out: {\n    effect: 'hinge',\n    delayScale: 1.5,\n    delay: 50,\n    sync: false,\n    shuffle: false,\n    reverse: false,\n    callback: function () {}\n  },\n\n  // callback that executes once textillate has finished \n  callback: function () {},\n\n  // set the type of token to animate (available types: 'char' and 'word')\n  type: 'char'\n});\n```\n\n##Events\n\nTextillate triggers the following events:\n\n* `start.tlt` - triggered when textillate starts\n* `inAnimationBegin.tlt` - triggered when the in animation begins\n* `inAnimationEnd.tlt` - triggered when the in animation ends\n* `outAnimationBegin.tlt` - triggered when the out animation begins\n* `outAnimationEnd.tlt` - triggered when the in animation ends\n* `end.tlt` - triggered when textillate ends\n\n```js\n$('.tlt').on('inAnimationBegin.tlt', function () {\n  // do something\n});\n```\n\n##Methods\n\n* `$element.textillate('start')` - Manually start/restart textillate\n* `$element.textillate('stop')` - Manually pause/stop textillate\n* `$element.textillate('in')` - Trigger the current text's in animation\n* `$element.textillate('out')` - Trigger the current text's out animation\n\n##Code Samples\n* [textillate.js + bounce.js](http://codepen.io/jschr/pen/GaJCi)\n",
  "readmeFilename": "README.md",
  "_id": "textillate@0.4.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/jschr/textillate.git"
  }
}